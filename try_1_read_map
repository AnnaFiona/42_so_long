int	read_map(t_data *data)
{
	int		fd;
	int		check;
	char	*buf;
	
	check = 1000;
	data-> buf = malloc(1 * sizeof(char));
	data-> buf[0] = '\0';
	buf = malloc(1001 * sizeof(char));
	if (!buf)
		return (1);
	fd = open(data->map_name, O_RDONLY);
	if (fd < 0)
	{
		free(buf);
		return (1);
	}
	while (check == 1000)
	{
		check = read(fd, buf, 1000);
		if (check < 0)
		{
			free(buf);
			return (1);
		}
		buf[check] = '\0';
		data->buf = ft_strjoin(data->buf, buf);
	}
	data->map = ft_split(data->buf, '\n');
	free(buf);
	close(fd);
	return (0);
}

int	get_map(t_data *data)
{
	data->clover_count = 0;
	data->move_count = 0;
	if (read_map(data))
		return (1);
	data->win_y = 0;
	data->win_x = ft_strlen(data->map[0]);
	while (data->map[data->win_y])
		data->win_y++;

	get_positions(data);
	if (data->p_x <= data->e_x)
		data->bat_look = 0;
	else
		data->bat_look = 1;
	return (0);
}